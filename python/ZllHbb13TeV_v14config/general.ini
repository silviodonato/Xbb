#!! -------------------------
#!! GENERAL CONFIGURATION
#!! -------------------------

[General]

#Set as the lumi of each sample. What is the effect of this ? Doesn't seem to change anything for the ploting
; lumi = 1

#Set to True or False to display debug messages
Debug: True

[Analysis]
tag = 13TeV

# BDT to discriminate Signal and Background
#!! If this Flag is used then 50% of MC samples will go in training and the rest will be scaled up by a factor of 2.
#!! if you train on 50% but then set it to 'False' while writing DC, then you get your biased training samples in the limit!!!
#!! be sure to have this right !!!
;#When computing SF from CR, set this flag to false
;if one wants to use Mjj -> put to False
;Rescale MC by factor 2 if true
TrainFlag = True

;!! -------------------------
;!! REGRESSION
;!! -------------------------
[Regression]
writeNewVariables = {
    'CSV3':'Max$(Jet_btagCSV[aJCidx])',\
    'naddGoodLeptons5':'Sum$(aLeptons_pt>5 && (aLeptons_jetBTagCSV<0.25 || aLeptons_relIso03<0.4 || aLeptons_looseIdSusy!=0 ||  aLeptons_jetDR>0.3 ))+Sum$(vLeptons_pt>5 && (vLeptons_jetBTagCSV<0.25 || vLeptons_relIso03<0.4 || vLeptons_looseIdSusy!=0 ||  vLeptons_jetDR>0.3 ))',\
    'naddGoodLeptons7':'Sum$(aLeptons_pt>7 && (aLeptons_jetBTagCSV<0.25 || aLeptons_relIso03<0.4 || aLeptons_looseIdSusy!=0 ||  aLeptons_jetDR>0.3 ))+Sum$(vLeptons_pt>7 && (vLeptons_jetBTagCSV<0.25 || vLeptons_relIso03<0.4 || vLeptons_looseIdSusy!=0 ||  vLeptons_jetDR>0.3 ))',\
    'naddGoodLeptons10':'Sum$(aLeptons_pt>10 && (aLeptons_jetBTagCSV<0.25 || aLeptons_relIso03<0.4 || aLeptons_looseIdSusy!=0 ||  aLeptons_jetDR>0.3 ))+Sum$(vLeptons_pt>10 && (vLeptons_jetBTagCSV<0.25 || vLeptons_relIso03<0.4 || vLeptons_looseIdSusy!=0 ||  vLeptons_jetDR>0.3 ))',\
    'naddGoodLeptons15':'Sum$(aLeptons_pt>15 && (aLeptons_jetBTagCSV<0.25 || aLeptons_relIso03<0.4 || aLeptons_looseIdSusy!=0 ||  aLeptons_jetDR>0.3 ))+Sum$(vLeptons_pt>15 && (vLeptons_jetBTagCSV<0.25 || vLeptons_relIso03<0.4 || vLeptons_looseIdSusy!=0 ||  vLeptons_jetDR>0.3 ))',\
    'naddGoodLeptons20':'Sum$(aLeptons_pt>20 && (aLeptons_jetBTagCSV<0.25 || aLeptons_relIso03<0.4 || aLeptons_looseIdSusy!=0 ||  aLeptons_jetDR>0.3 ))+Sum$(vLeptons_pt>20 && (vLeptons_jetBTagCSV<0.25 || vLeptons_relIso03<0.4 || vLeptons_looseIdSusy!=0 ||  vLeptons_jetDR>0.3 ))',\
    'addLepton5':'Sum$(aLeptons_pt>5&&abs(aLeptons_eta)<2.5)+Sum$(vLeptons_pt>5&&abs(vLeptons_eta)<2.5)',\
    'addLepton10':'Sum$(aLeptons_pt>10&&abs(aLeptons_eta)<2.5)+Sum$(vLeptons_pt>10&&abs(vLeptons_eta)<2.5)',\
    'addLepton20':'Sum$(aLeptons_pt>20&&abs(aLeptons_eta)<2.5)+Sum$(vLeptons_pt>20&&abs(vLeptons_eta)<2.5)',\
    'addLepton30':'Sum$(aLeptons_pt>30&&abs(aLeptons_eta)<2.5)+Sum$(vLeptons_pt>30&&abs(vLeptons_eta)<2.5)',\
    'addJet20':'Sum$(Jet_pt[aJCidx]>20. && abs(Jet_eta[aJCidx])<2.5)',\
    'addJetNoPU20':'Sum$(Jet_pt[aJCidx]>20. && abs(Jet_eta[aJCidx])<2.5 && Jet_puId[aJCidx]>0)',\
    'addCenJet20':'Sum$(Jet_pt[aJCidx]>20. && abs(Jet_eta[aJCidx])<2.4)',\
    'addCenJetNoPU20':'Sum$(Jet_pt[aJCidx]>20. && abs(Jet_eta[aJCidx])<2.4 && Jet_puId[aJCidx]>0)',\
    'addJet30':'Sum$(Jet_pt[aJCidx]>30.)',\
    'addJetNoPU30':'Sum$(Jet_pt[aJCidx]>30. && Jet_puId[aJCidx]>0)',\
    'addCenJet30':'Sum$(Jet_pt[aJCidx]>30. && abs(Jet_eta[aJCidx])<2.4)',\
    'addCenJetNoPU30':'Sum$(Jet_pt[aJCidx]>30. && abs(Jet_eta[aJCidx])<2.4 && Jet_puId[aJCidx]>0)',\
    'addJet40':'Sum$(Jet_pt[aJCidx]>40.)',\
    'addJetNoPU40':'Sum$(Jet_pt[aJCidx]>40. && Jet_puId[aJCidx]>0)',\
    'addCenJet40':'Sum$(Jet_pt[aJCidx]>40. && abs(Jet_eta[aJCidx])<2.4)',\
    'addCenJetNoPU40':'Sum$(Jet_pt[aJCidx]>40. && abs(Jet_eta[aJCidx])<2.4 && Jet_puId[aJCidx]>0)',\
    'pt_1':'max(Jet_pt[hJCidx[0]],Jet_pt[hJCidx[1]])',\
    'pt_2':'min(Jet_pt[hJCidx[0]],Jet_pt[hJCidx[1]])',\
    'addJet40':'Sum$(Jet_pt[aJCidx]>40.)',\
    'minDeltaPhiJet1Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Iteration$<1)',\
    'minDeltaPhiJet2Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Iteration$<2)',\
    'minDeltaPhiJet3Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Iteration$<3)',\
    'minDeltaPhiJet4Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Iteration$<4)',\
    'minDeltaPhiCenJetNoPU20Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>20 && Jet_eta<2.5 && Jet_puId)',\
    'minDeltaPhiCenJetNoPU30Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>30 && Jet_eta<2.5 && Jet_puId)',\
    'minDeltaPhiCenJetNoPU30Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>30 && Jet_puId)',\
    'minDeltaPhiCenJetNoPU30Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>30 && Jet_eta<2.5 )',\
    'minDeltaPhiCenJetNoPU30Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>30 )',\
    'minDeltaPhiCenJetNoPU40Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>40 && Jet_eta<2.5 && Jet_puId)',\
    'minDeltaPhiCenJetNoPU50Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>50 && Jet_eta<2.5 && Jet_puId)',\
    'minDeltaPhiCenJetNoPU60Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>60 && Jet_eta<2.5 && Jet_puId)',\
    'minDeltaPhiCenJetNoPU70Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>70 && Jet_eta<2.5 && Jet_puId)',\
    'minDeltaPhiCenJetNoPU80Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>80 && Jet_eta<2.5 && Jet_puId)',\
    'minDeltaPhiJetNoPU80Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>80 && Jet_puId)',\
    'minDeltaPhiCenJet80Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>80 && Jet_eta<2.5 )',\
    'minDeltaPhiJet80Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>80 )',\
    'minDeltaPhiJet90Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>90 )',\
    'minDeltaPhiJet100Met':'MinIf$(abs(TVector2::Phi_mpi_pi(Jet_phi-met_phi)),Jet_pt>100)',\
    'metmetType1p2_sig':'metType1p2_pt/sqrt(met_sumEt)',\
    'metPuppi_sig':'metPuppi_pt/sqrt(met_sumEt)',\
    'met_sig':'met_pt/sqrt(met_sumEt)',\
    'met_sig':'met_pt/sqrt(met_sumEt)',\
    'DeltaPhiJet1Jet2':'abs(TVector2::Phi_mpi_pi(Jet_phi[0]-Jet_phi[1]))',\
    'DeltaPhiHMET':'abs(TVector2::Phi_mpi_pi(H_phi-met_phi))',\
    'DeltaPhiHCSVMET':'abs(TVector2::Phi_mpi_pi(HCSV_phi-met_phi))'}

;regWeight = weights/MVA_BDT_REG_ZllHbbRegression_ZZTo2Q2Nu.weights.xml
;regWeight = weights/MVA_BDT_REG_ZllHbbRegression_ZH.weights.xml
regWeight = weights/MVA_BDT_REG_ZllHbbRegression_ZH_HToBB_ZToLL_M125_pow.weights.xml

; ##regVars## must be compatible with [TrainRegression] -> Vars
regVars = ['Alt$(Jet_pt[hJCidx],0)', 'Alt$(Jet_rawPt[hJCidx],0)', 'Alt$(rho[hJCidx],0)', 'Alt$(Jet_eta[hJCidx],0)', 'VHbb::evalMtFromPtEtaPhiM(Alt$(Jet_pt[hJCidx],0),Alt$(Jet_eta[hJCidx],0),Alt$(Jet_phi[hJCidx],0),Alt$(Jet_mass[hJCidx],0))', 'Alt$(Jet_leadTrackPt[hJCidx],0)', 'max(Alt$(Jet_leptonPtRel[hJCidx],0),0)', 'max(Alt$(Jet_leptonPt[hJCidx],0),0)', 'max(Alt$(Jet_leptonDeltaR[hJCidx],0),0)', 'Alt$(Jet_chEmEF[hJCidx],0)', 'Alt$(Jet_neEmEF[hJCidx],0)', 'Alt$(Jet_chHEF[hJCidx],0)','Alt$(Jet_neHEF[hJCidx],0)', 'Alt$(Jet_chMult[hJCidx],0)', 'Alt$(Jet_vtxNtracks[hJCidx],0)', 'Alt$(Jet_vtxPt[hJCidx],0)', 'Alt$(Jet_vtxMass[hJCidx],0)', 'max(Alt$(Jet_vtx3DVal[hJCidx],0),0)', 'Alt$(Jet_vtx3DSig[hJCidx],0)']

; ##regDict## must contain exactly all ##regVars##
; it is a dictionary between Jet_vtxPt[hJCidx]:Jet_vtxPt[hJCidx[0]]
regDict = {'Alt$(Jet_pt[hJCidx],0)': 'Alt$(Jet_pt[hJCidx[0]] ,0)', 'Alt$(Jet_rawPt[hJCidx],0)': 'Alt$(Jet_rawPt[hJCidx[0]] ,0)', 'Alt$(rho[hJCidx],0)': 'Alt$(rho[hJCidx[0]] ,0)', 'Alt$(Jet_eta[hJCidx],0)': 'Alt$(Jet_eta[hJCidx[0]] ,0)', 'VHbb::evalMtFromPtEtaPhiM(Alt$(Jet_pt[hJCidx],0),Alt$(Jet_eta[hJCidx],0),Alt$(Jet_phi[hJCidx],0),Alt$(Jet_mass[hJCidx],0))': 'VHbb::evalMtFromPtEtaPhiM(Alt$(Jet_pt[hJCidx[0]] ,0),Alt$(Jet_eta[hJCidx[0]] ,0),Alt$(Jet_phi[hJCidx[0]] ,0),Alt$(Jet_mass[hJCidx[0]] ,0))', 'Alt$(Jet_vtxMass[hJCidx],0)': 'Alt$(Jet_vtxMass[hJCidx[0]] ,0)', 'Alt$(Jet_leadTrackPt[hJCidx],0)': 'Alt$(Jet_leadTrackPt[hJCidx[0]] ,0)', 'Alt$(Jet_vtxNtracks[hJCidx],0)': 'Alt$(Jet_vtxNtracks[hJCidx[0]] ,0)', 'Alt$(Jet_vtxPt[hJCidx],0)': 'Alt$(Jet_vtxPt[hJCidx[0]] ,0)', 'max(Alt$(Jet_vtx3DVal[hJCidx],0),0)': 'max(Alt$(Jet_vtx3DVal[hJCidx[0]],0),0)', 'Alt$(Jet_vtx3DSig[hJCidx],0)': 'Alt$(Jet_vtx3DSig[hJCidx[0]] ,0)', 'Alt$(Jet_neEmEF[hJCidx],0)': 'Alt$(Jet_neEmEF[hJCidx[0]] ,0)', 'max(Alt$(Jet_leptonPtRel[hJCidx],0),0)': 'max(Alt$(Jet_leptonPtRel[hJCidx[0]] ,0),0)', 'max(Alt$(Jet_leptonPt[hJCidx],0),0)': 'max(Alt$(Jet_leptonPt[hJCidx[0]] ,0),0)', 'Alt$(Jet_chMult[hJCidx],0)': 'Alt$(Jet_chMult[hJCidx[0]] ,0)', 'Alt$(Jet_chEmEF[hJCidx],0)': 'Alt$(Jet_chEmEF[hJCidx[0]] ,0)', 'Alt$(Jet_chHEF[hJCidx],0)': 'Alt$(Jet_chHEF[hJCidx[0]] ,0)', 'max(Alt$(Jet_leptonDeltaR[hJCidx],0),0)': 'max(Alt$(Jet_leptonDeltaR[hJCidx[0]] ,0),0)', 'Alt$(Jet_neHEF[hJCidx],0)': 'Alt$(Jet_neHEF[hJCidx[0]] ,0)'}


;'Jet_mass[hJCidx]': 'Jet_mass[hJCidx[0]]', 'VHbb::evalEtFromPtEtaPhiM(Jet_pt[hJCidx],Jet_eta[hJCidx],Jet_phi[hJCidx],Jet_mass[hJCidx])': 'VHbb::evalEt(Jet_pt[hJCidx[0]],Jet_eta[hJCidx[0]],Jet_phi[hJCidx[0]],VHbb::GetEnergy(Jet_pt[hJCidx[0]],Jet_eta[hJCidx[0]],Jet_mass[hJCidx[0]]))', 'VHbb::evalMtFromPtEtaPhiM(Jet_pt[hJCidx],Jet_eta[hJCidx],Jet_phi[hJCidx],Jet_mass[hJCidx])': 'VHbb::evalMt(Jet_pt[hJCidx[0]],Jet_eta[hJCidx[0]],Jet_phi[hJCidx[0]],VHbb::GetEnergy(Jet_pt[hJCidx[0]],Jet_eta[hJCidx[0]],Jet_mass[hJCidx[0]]))',

regWeightFilterJets = weights/MVA_BDT_REG_MyRegression.weights.xml
regDictFilterJets = {"fathFilterJets_pt":"fathFilterJets_pt[0]","VHbb::evalJERBias(fathFilterJets_ptRaw,fathFilterJets_genPt,fathFilterJets_eta)":"VHbb::evalJERBias(fathFilterJets_ptRaw[0],fathFilterJets_genPt[0],fathFilterJets_eta[0])","rho25":"rho25","VHbb::evalEt(fathFilterJets_pt,fathFilterJets_eta,fathFilterJets_phi,fathFilterJets_e)":"VHbb::evalEt(fathFilterJets_pt[0],fathFilterJets_eta[0],fathFilterJets_phi[0],fathFilterJets_e[0])","VHbb::evalMt(fathFilterJets_pt,fathFilterJets_eta,fathFilterJets_phi,fathFilterJets_e)":"VHbb::evalMt(fathFilterJets_pt[0],fathFilterJets_eta[0],fathFilterJets_phi[0],fathFilterJets_e[0])","fathFilterJets_ptLeadTrack":"fathFilterJets_ptLeadTrack[0]","metPuppi_pt":"METet","VHbb::deltaPhi(met_phi,fathFilterJets_phi)":"VHbb::deltaPhi(met_phi,fathFilterJets_phi[0])"}
regVarsFilterJets = ["fathFilterJets_pt","VHbb::evalJERBias(fathFilterJets_ptRaw,fathFilterJets_genPt,fathFilterJets_eta)","rho25","VHbb::evalEt(fathFilterJets_pt,fathFilterJets_eta,fathFilterJets_phi,fathFilterJets_e)","VHbb::evalMt(fathFilterJets_pt,fathFilterJets_eta,fathFilterJets_phi,fathFilterJets_e)","fathFilterJets_ptLeadTrack","metPuppi_pt","VHbb::deltaPhi(met_phi,fathFilterJets_phi)"]


;regWeight = weights/MVA_BDT_REG_ZllHbbRegression_ZH.weights.xml
;regWeight = weights/MVA_BDT_REG_ZllHbbRegression_ZZTo2Q2Nu.weights.xml


#Need this for the plotting
[VHbbNameSpace]
library=<!Directories|vhbbpath!>/interface/VHbbNameSpace_h.so
[BTagReshaping]
library=<!Directories|vhbbpath!>/interface/BTagReshaping_h.so
[BTagHFweights]
;file=<!Directories|vhbbpath!>/python/weights/csv_rwt_hf_IT_FlatSF_2015_07_27.root
file=<!Directories|vhbbpath!>/python/weights/csv_rwt_fit_hf_2016_01_28.root
[BTagLFweights]
;file=<!Directories|vhbbpath!>/python/weights/csv_rwt_lf_IT_FlatSF_2015_07_27.root
file=<!Directories|vhbbpath!>/python/weights/csv_rwt_fit_lf_2016_01_28.root

;;!! for the likelihood
[AngularLike]
backgrounds = ['Zbb','Zudsg','ttbar','ZZ']
yields = {'Zbb':584.8,'Zudsg':881.61,'ttbar':135.7,'ZZ':44.04,'Sig':5.13}

;!! --------------------------
;!! SYSTEMATICS
;!! --------------------------
;Note: it seems that the shape sys are hardcode in evaluateMVA. The lines below don't seem to have any effect for the moment
[systematics]
systematics: Nominal JER_up JER_down JES_up JES_down beff_up beff_down bmis_up bmis_down beff1_up beff1_down
;TEST
;systematics: Nominal HVmass_up HVmass_down

;!! --------------------------------------------------
;!! Varibles definition for trainging and evaluation
;!! --------------------------------------------------

;##TODO##  addCenJetNoPU30_JER/JES_up/down
[ZllBDTVars]
Nominal: H.mass H.pt HVdPhi metPuppi_pt H.dEta hJet_btagCSV[0] hJet_btagCSV[1] addCenJetNoPU30 H.dR max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

JER_up: H_JER.mass_up H_JER.pt_up HVdPhi metPuppi_pt H.dEta hJet_btagCSV[0] hJet_btagCSV[1] addCenJetNoPU30 H.dR max(hJet_pt_JER_up[0],hJet_pt_JER_up[1]) min(hJet_pt_JER_up[0],hJet_pt_JER_up[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])
JER_down: H_JER.mass_down H_JER.pt_down HVdPhi metPuppi_pt H.dEta hJet_btagCSV[0] hJet_btagCSV[1] addCenJetNoPU30 H.dR  max(hJet_pt_JER_down[0],hJet_pt_JER_down[1]) min(hJet_pt_JER_down[0],hJet_pt_JER_down[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

JES_up: H_JES.mass_up H_JES.pt_up HVdPhi metPuppi_pt H.dEta hJet_btagCSV[0] hJet_btagCSV[1] addCenJetNoPU30 H.dR max(hJet_pt_JES_up[0],hJet_pt_JES_up[1]) min(hJet_pt_JES_up[0],hJet_pt_JES_up[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])
JES_down: H_JES.mass_down H_JES.pt_down HVdPhi metPuppi_pt H.dEta hJet_btagCSV[0] hJet_btagCSV[1] addCenJetNoPU30 H.dR max(hJet_pt_JES_down[0],hJet_pt_JES_down[1]) min(hJet_pt_JES_down[0],hJet_pt_JES_down[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

beff_up: H_JES.mass_down H_JES.pt_down HVdPhi metPuppi_pt H.dEta hJet_btagCSVUp[0] hJet_btagCSVUp[1] addCenJetNoPU30 H.dR max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

beff_down: H_JES.mass_down H_JES.pt_down HVdPhi metPuppi_pt H.dEta hJet_btagCSVDown[0] hJet_btagCSVDown[1] addCenJetNoPU30 H.dR max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

bmis_up: H_JES.mass_down H_JES.pt_down HVdPhi metPuppi_pt H.dEta hJet_btagCSVFUp[0] hJet_btagCSVFUp[1] addCenJetNoPU30 H.dR max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])
bmis_down: H_JES.mass_down H_JES.pt_down HVdPhi metPuppi_pt H.dEta hJet_btagCSVFDown[0] hJet_btagCSVFDown[1] addCenJetNoPU30 H.dR max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

;###FIXME###  beff1 is identical to bmis
beff1_up: H_JES.mass_down H_JES.pt_down HVdPhi metPuppi_pt H.dEta hJet_btagCSVFUp[0] hJet_btagCSVFUp[1] addCenJetNoPU30 H.dR max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])
beff1_down: H_JES.mass_down H_JES.pt_down HVdPhi metPuppi_pt H.dEta hJet_btagCSVFDown[0] hJet_btagCSVFDown[1] addCenJetNoPU30 H.dR max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

[ZllBDTVarsNoMjj]
Nominal: H.pt HVdPhi metPuppi_pt hJet_btagCSV[0] hJet_btagCSV[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

JER_up: H_JER.pt_up HVdPhi metPuppi_pt hJet_btagCSV[0] hJet_btagCSV[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt_JER_up[0],hJet_pt_JER_up[1]) min(hJet_pt_JER_up[0],hJet_pt_JER_up[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])
JER_down: H_JER.pt_down HVdPhi metPuppi_pt hJet_btagCSV[0] hJet_btagCSV[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt_JER_down[0],hJet_pt_JER_down[1]) min(hJet_pt_JER_down[0],hJet_pt_JER_down[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

JES_up: H_JES.pt_up HVdPhi metPuppi_pt hJet_btagCSV[0] hJet_btagCSV[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt_JES_up[0],hJet_pt_JES_up[1]) min(hJet_pt_JES_up[0],hJet_pt_JES_up[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])
JES_down: H_JES.pt_down HVdPhi metPuppi_pt hJet_btagCSV[0] hJet_btagCSV[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt_JES_down[0],hJet_pt_JES_down[1]) min(hJet_pt_JES_down[0],hJet_pt_JES_down[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

beff_up: H_JES.pt_down HVdPhi metPuppi_pt hJet_btagCSVUp[0] hJet_btagCSVUp[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])
beff_down: H_JES.pt_down HVdPhi metPuppi_pt hJet_btagCSVDown[0] hJet_btagCSVDown[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

bmis_up: H_JES.pt_down HVdPhi metPuppi_pt hJet_btagCSVFUp[0] hJet_btagCSVFUp[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])
bmis_down: H_JES.pt_down HVdPhi metPuppi_pt hJet_btagCSVFDown[0] hJet_btagCSVFDown[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

;###FIXME###  beff1 is identical to bmis
beff1_up: H_JES.pt_down HVdPhi metPuppi_pt hJet_btagCSVFUp[0] hJet_btagCSVFUp[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])
beff1_down: H_JES.pt_down HVdPhi metPuppi_pt hJet_btagCSVFDown[0] hJet_btagCSVFDown[1] addJetNoPU20-Sum$(isrJetVH>=0)-(nhjidxaddJetsdR08-2) max(hJet_pt[0],hJet_pt[1]) min(hJet_pt[0],hJet_pt[1]) naddGoodLeptons5 Max$(Jet_btagCSV[aJCidx])

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; other things:


[Samples]
;used for dc step
; short name : sampleName(s)
; or
; short name : subnames
; where sampleName(s) and subnames must be defined in samples_nosplit.ini

;=======
;Signals
;=======

ZH : 'ZH_HToBB_ZToLL_M125_pow'
ggZH : 'ggZH_HToBB_ZToLL_M125_pow'

Signal: <!Samples|ZH!>,<!Samples|ggZH!>

;==========
;Backgrounds
;==========

;#!!_*_*_*_*_*_
;#Drell-Yan
;#!!_*_*_*_*_*_

;inclusive sample
DYincl: 'ZJets_udscg','ZJets_1b','ZJets_2b'
;inclusive no spliting
DYinclnosplit: 'DYJets'
;HT binned
DYHT:'HT100to200ZJets_udscg','HT100to200ZJets_1b','HT100to200ZJets_2b','HT200to400ZJets_udscg','HT200to400ZJets_1b','HT200to400ZJets_2b','HT400to600ZJets_udscg','HT400to600ZJets_1b','HT400to600ZJets_2b','HT600toInfZJets_udscg','HT600toInfZJets_1b','HT600toInfZJets_2b'
;inclusive HT<100
DYinclHT0to100: 'HT0to100ZJets_udscg','HT0to100ZJets_1b','HT0to100ZJets_2b'
;inclusive HT>100
DYinclHT100toInf: 'HT100toInfZJets_udscg','HT100toInfZJets_1b','HT100toInfZJets_2b'
;stiched sample
DYinclHT: <!Samples|DYHT!>,<!Samples|DYinclHT0to100!>

;DY: <!Samples|DYinclHT100toInf!>
DY: <!Samples|DYinclHT!>
;DY: <!Samples|DYHT!>
;DY: 'ZJets_udscg','ZJets_1b','ZJets_2b'
;DY: <!Samples|DYHT!>

;DY:'ZJets_udscg','ZJets_1b','ZJets_2b','ZJets_2c'

;ZJetsMadHT100: 'ZJetsMadHT100_light','ZJetsMadHT100_c','ZJetsMadHT100_1b','ZJetsMadHT100_2b'
;ZJetsMadHT200: 'ZJetsMadHT200_light','ZJetsMadHT200_c','ZJetsMadHT200_1b','ZJetsMadHT200_2b'
;ZJetsMadHT400: 'ZJetsMadHT400_light','ZJetsMadHT400_c','ZJetsMadHT400_1b','ZJetsMadHT400_2b'
;ZJetsMadHT600: 'ZJetsMadHT600_light','ZJetsMadHT600_c','ZJetsMadHT600_1b','ZJetsMadHT600_2b'
;ZJets_light: <!Samples|ZJetsMadHT100_light!>,<!Samples|ZJetsMadHT200_light!>,<!Samples|ZJetsMadHT400_light!>,<!Samples|ZJetsMadHT600_light!>
;ZJets_c: <!Samples|ZJetsMadHT100_c!>,<!Samples|ZJetsMadHT200_c!>,<!Samples|ZJetsMadHT400_c!>,<!Samples|ZJetsMadHT600_c!>
;ZJets_1b: <!Samples|ZJetsMadHT100_1b!>,<!Samples|ZJetsMadHT200_1b!>,<!Samples|ZJetsMadHT400_1b!>,<!Samples|ZJetsMadHT600_1b!>
;ZJets_2b: <!Samples|ZJetsMadHT100_2b!>,<!Samples|ZJetsMadHT200_2b!>,<!Samples|ZJetsMadHT400_2b!>,<!Samples|ZJetsMadHT600_2b!>
;ZJets: <!Samples|ZJetsMadHT100!>,<!Samples|ZJetsMadHT200!>,<!Samples|ZJetsMadHT400!>,<!Samples|ZJetsMadHT600!>

;Single top
ST: 'ST_s', 'ST_t', 'ST_tW_top', 'ST_tW_antitop'

;TTbar
TT: 'TT_pow'

;#!!_*_*_*_*_*_
;#DiBoson
;#!!_*_*_*_*_*_

WW: 'WWpythia_udscg','WWpythia_1b','WWpythia_2b'
WZ: 'WZpythia_udscg','WZpythia_1b','WZpythia_2b'
ZZ: 'ZZpythia_udscg','ZZpythia_1b','ZZpythia_2b'


;QCD
QCDHT: 'QCD_HT1000to1500_TuneCUETP8M1','QCD_HT100to200_TuneCUETP8M1','QCD_HT1500to2000_TuneCUETP8M1','QCD_HT2000toInf_TuneCUETP8M1','QCD_HT200to300_TuneCUETP8M1','QCD_HT500to700_TuneCUETP8M1','QCD_HT700to1000_TuneCUETP8M1'

;QCD: 'QCDHT100','QCDHT200','QCDHT300','QCDHT500','QCDHT700','QCDHT1000','QCDHT1500','QCDHT2000'
QCD: <!Samples|QCDHT!>

;Other

;All background
allBKG: <!Samples|VV!>,<!Samples|DY!>,<!Samples|TT!>,<!Samples|ST!>,<!Samples|QCD!>

setup: VH,ZJets_light,ZJets_c,ZJets_1b,ZJets_2b,TT,ST,QCD
setupLog: <!Samples|setup!>

Group: {
    ; (sub)sampleName(s) : short name
    'ZH_HToBB_ZToLL_M125':'ZH',\
    'ZH_HToBB_ZToLL_M125_pow':'ZH',\
    'ggZH_HToBB_ZToLL_M125':'ggZH',\
    'ggZH_HToBB_ZToLL_M125_pow':'ggZH',\
    'ZJets_2b':'ZJets_2b','ZJets_1b':'ZJets_1b','ZJets_c':'ZJets_c','ZJets_light':'ZJets_light',\
    'ZJets':'ZJets',\
    'TT_mad':'TT','TT_pow':'TT',\
    'ST_s':'ST', 'ST_t':'ST', 'ST_tW_top':'ST', 'ST_tW_antitop':'ST',\
    'QCDHT100':'QCD','QCDHT200':'QCD','QCDHT300':'QCD','QCDHT500':'QCD','QCDHT700':'QCD','QCDHT1000':'QCD','QCDHT1500':'QCD','QCDHT2000':'QCD',\
    'WWpythia_light':'VV','WWpythia_c':'VV','WWpythia_1b':'VV','WWpythia_2b':'VV',\
    'WZpythia_light':'VV','WZpythia_c':'VV','WZpythia_1b':'VV','WZpythia_2b':'VV',\
    'ZZpythia_light':'VV','ZZpythia_c':'VV','ZZpythia_1b':'VV','ZZpythia_2b':'VV',\
    'WZJets_pythia':'VV',\
    'FakeData':'DATA','FakeData':'DATA','SingleMuon':'DATA', 'SingleElectron':'DATA', 'MuonEG':'DATA', 'MET':'DATA', 'Jet':'DATA', 'JetHT':'DATA', 'HTMHT':'DATA', 'DoubleMuon':'DATA', 'DoubleEG':'DATA'\
    }

[Weights]
PUWeight:   VHbb::weight2( nTrueInt )
Common:     sign(genWeight)
BTagWeight: bTagWeight_new

#lhe weights. Are used to produce the histograms. See "get_histos_from_tree" in StackMaker
;inital
;weightF: sign(genWeight)*puWeight
;intial + PU
;weightF: sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF: <!Weights|Common!> * <!Weights|PUWeight!>
;intial + PU + bTag
;weightF: <!Weights|Common!> * <!Weights|PUWeight!> * <!Weights|BTagWeight!>
;weightF: sign(genWeight)*VHbb::weight2(nTrueInt)*bTagWeight
;intial + PU + bTag + muSF (only iso for now)
;weightF: <!Weights|Common!> * <!Weights|PUWeight!> * <!Weights|BTagWeight!> * <!Weights|weightF_muSF!>
;intial + PU + bTag + muSF (only iso for now) + EWK
weightF: <!Weights|Common!> * <!Weights|PUWeight!> * <!Weights|BTagWeight!> * <!Weights|weightF_muSF!> * <!Weights|weightF_EWK!>

;(new) bTag weight

weightF_bTagHF_UP:          <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightHFUp_new
weightF_bTagLF_UP:          <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightLFUp_new
weightF_bTagLFStats1_UP:    <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightLFStats1Up_new
weightF_bTagLFStats2_UP:    <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightLFStats2Up_new
weightF_bTagHFStats1_UP:    <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightHFStats1Up_new
weightF_bTagHFStats2_UP:    <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightHFStats2Up_new
weightF_bTagcErr1_UP:       <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightcErr1Up_new
weightF_bTagcErr2_UP:       <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightcErr2Up_new

weightF_bTagHF_DOWN:        <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightHFDown_new
weightF_bTagLF_DOWN:        <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightLFDown_new
weightF_bTagLFStats1_DOWN:  <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightLFStats1Down_new
weightF_bTagLFStats2_DOWN:  <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightLFStats2Down_new
weightF_bTagHFStats1_DOWN:  <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightHFStats1Down_new
weightF_bTagHFStats2_DOWN:  <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightHFStats2Down_new
weightF_bTagcErr1_DOWN:     <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightcErr1Down_new
weightF_bTagcErr2_DOWN:     <!Weights|Common!> * <!Weights|PUWeight!> * bTagWeightcErr2Down_new

weightF_pileUp_UP:          <!Weights|Common!> * VHbb::weight2_up( nTrueInt )   * <!Weights|BTagWeight!>
weightF_pileUp_DOWN:        <!Weights|Common!> * VHbb::weight2_down( nTrueInt ) * <!Weights|BTagWeight!>

;; OLD Weights mentioned by Lorenzo
;weightF_bTagHF_UP: bTagWeight_HFUp*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagHF_DOWN: bTagWeight_HFDown*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagLF_UP: bTagWeight_LFUp*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagLF_DOWN: bTagWeight_LFDown*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagStats1_UP: bTagWeight_Stats1Up*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagStats1_DOWN: bTagWeight_Stats1Down*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagStats2_UP: bTagWeight_Stats2Up*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagStats2_DOWN: bTagWeight_Stats2Down*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagcErr1_UP: bTagWeight_cErr1Up*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagcErr1_DOWN: bTagWeight_cErr1Down*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagcErr2_UP: bTagWeight_cErr2Up*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagcErr2_DOWN: bTagWeight_cErr2Down*<!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2(nTrueInt)
;puWeight_UP: <!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2_up(nTrueInt)
;puWeight_DOWN: <!Weights|weightF_muSF!>*sign(genWeight)*VHbb::weight2_down(nTrueInt)

weightF_muSFtrigg: (vLeptons_Eff_HLT[0]*vLeptons_SF_HLT[0]*(1-vLeptons_Eff_HLT[1])*vLeptons_SF_HLT[1] + vLeptons_Eff_HLT[1]*vLeptons_SF_HLT[1]*(1-vLeptons_Eff_HLT[0])*vLeptons_SF_HLT[0] + vLeptons_Eff_HLT[0]*vLeptons_SF_HLT[0]*vLeptons_Eff_HLT[1]*vLeptons_SF_HLT[1])/(vLeptons_Eff_HLT[0]*(1-vLeptons_Eff_HLT[1]) + vLeptons_Eff_HLT[1]*(1-vLeptons_Eff_HLT[0]) + vLeptons_Eff_HLT[0]*vLeptons_Eff_HLT[1])
weightF_muSFiso: vLeptons_SF_IsoLoose[0]*vLeptons_SF_IsoLoose[1]
weightF_muSFid: vLeptons_SF_IdLoose[0]*vLeptons_SF_IdLoose[1]
weightF_muSF: <!Weights|weightF_muSFiso!>*<!Weights|weightF_muSFid!>

weightF_EWK: 1
;weightF_EWK: VHbb::ptWeightEWK_Zll(nGenVbosons[0], GenVbosons_pt[0], VtypeSim, GenVbosons_pdgId[0], nGenTop, nGenHiggsBoson)
;VHbb::ptWeightEWK( nGenVbosons, GenVbosons_pt, VtypeSim, GenVbosons_pdgId)




;weightF_bTagWeightHF_UP: bTagWeight_HFUp*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_bTagWeightHF_DOWN: bTagWeight_HFDown*sign(genWeight)*VHbb::weight2(nTrueInt)
;weightF_sys_UP: sign(genWeight)  ; * puWeight
;weightF_sys_DOWN: sign(genWeight)  ; * puWeight
;weightF_QCD_UP: sign(genWeight)  ; * puWeight
;weightF_QCD_DOWN: sign(genWeight)  ; * puWeight
